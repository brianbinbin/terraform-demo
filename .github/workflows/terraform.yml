# name: "Terraform"

# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     name: "Terraform"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download emqx package
#         run: "curl -L --max-redirs -1 -o /tmp/emqx.zip https://www.emqx.com/zh/downloads/enterprise/4.3.2/emqx-ee-ubuntu20.04-4.3.2-amd64.zip"

#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           repository: emqx/tf-test-automation
#           path: tf-test-automation

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_wrapper: false

#       - name: Terraform Init
#         working-directory: ./tf-test-automation
#         id: init
#         run: terraform init

#       - name: Terraform Validate
#         working-directory: ./tf-test-automation
#         id: validate
#         run: terraform validate -no-color

#       - name: Terraform Apply
#         working-directory: ./tf-test-automation
#         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#         run: |
#           terraform apply -auto-approve -var="key_name=aws-west-bench" -var="os=ubuntu" -var="region=us-west-2" -var="emqx_lic=${{ secrets.EMQX_LIC }}"  -var="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var="private_key=${{ secrets.SSH_PRIVATE_KEY }}" -var="emqx_package=/tmp/emqx.zip"
#           echo "private_ip=$(terraform output private_ip)" >> $GITHUB_ENV

#       - name: Show private ip
#         run: echo "${{ env.private_ip }}"

name: "Awscli Start Xmeter"

on:
  push:

jobs:
  awscli:
    runs-on: ubuntu-latest

    steps:
      - name: Install awscli
        run: |
          apt update && apt install -y curl unzip \
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
          && unzip awscliv2.zip \
          && sudo ./aws/install
